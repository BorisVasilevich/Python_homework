# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод: Вывод:
# 7 3 3 2 12
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)

# import random
# a = int(input('Введите количество чисел в первом массиве: '))
# lst1 = [random.randint(0,15) for i in range(a)]
# print(lst1)
# b = int(input('Введите количество чисел во втором массиве: '))
# lst2 = [int(input()) for i in range(b)]
# print(lst2)
# lst3 = []
# for i in lst1:
#     if i not in lst2:
#         lst3.append(i)
# print(lst3)



#Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод: Ввод:
# 5 5
# 1 2 3 4 5 1 5 1 5 1
# Вывод: Вывод:
# 0 2
# (каждое число вводится с новой строки)

# b = int(input('Введите количество чисел в массиве: '))
# lst1 = [int(input()) for i in range(b)]
# print(lst1)
# count = 0
# for i in range(len(lst1)):
#     if lst1[i - 1] < lst1[i] > lst1[i + 1]:
#         count += 1
# print(count)


# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод: Вывод:
# 1 2 3 2 3

# lt = [1, 2, 3, 2, 2, 3, 3]
# print(lt)
# count = 0
# for i in range(len(lt)):
#     j = i + 1
#     for j in range(j, len(lt)):
#         if lt[i] == lt[j]:
#             count += 1
# print(count)


# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод: Вывод:
# 300 220 284

# a = int(input('Enter number: '))
#
# lsd = []
# for i in range(a):
#     sum = 0
#     for j in range(1, i // 2 + 1):
#         if i % j == 0:
#             sum += j
#     lsd.append([i,sum])
# print(lsd)
# for i in range(len(lsd)):
#     for j in range(i+1, len(lsd)):
#         if lsd[i][0] == lsd[j][1] and lsd[i][1] == lsd[j][0] and i != j:
#             print(*lsd[i])

f = 'a aa abC aa ac abc bcd a'
a = f.lower().split()
print(a)
lsd = []
k = []
for i in range(len(a)):
    count = 0
    for j in range(len(a)):
        if a[i] == a[j]:
            count += 1
#     lsd.append([a[i], count])
# print(lsd)
# lsd2 = []
# #print(lsd)
# for i in lsd:
#     if i not in lsd2:
#         lsd2.append(i)
# print(*lsd2)


    print(f'{a[i]}_{count}', end = ' ')
# b = {}
# for i in f.lower().split():
#     if i in b:
#         b[i] += 1
#         print(f'{i}_{b[i]}')
#     else:
#         b[i] = 1
#         #print(i)
# #print(f'{i}_{b[i]}')